from collections import OrderedDict
import csv
import random

"""
C1 = [
    [0, 0, 0],
    [0, 1, 1],
    [1, 0, 1],
    [1, 1, 1]
]
CFeatures1 = ["A", "B"]

C1 = [
    [0, 1, 0, 0, 0],
    [1, 0, 1, 1, 0],
    [1, 1, 0, 0, 1],
    [0, 1, 1, 0, 1],
    [0, 0, 0, 1, 0],
    [0, 0, 1, 0, 1],
    [0, 1, 1, 1, 0],
    [0, 0, 0, 0, 0],
    [1, 0, 0, 0, 0],
    [1, 1, 0, 1, 0]
]
CFeatures1 = ["A", "B", "C", "D"]

C1 = [
    [1, 0, 0, 0, 1, 1, 1],
    [0, 1, 0, 1, 1, 1, 1],
    [1, 0, 1, 1, 0, 1, 0],
    [1, 0, 1, 1, 1, 0, 0],
    [0, 1, 1, 0, 1, 0, 1],
    [0, 1, 0, 1, 0, 1, 0],
    [0, 0, 1, 0, 0, 1, 0],
    [0, 1, 1, 1, 1, 0, 1],
    [0, 0, 0, 1, 0, 0, 0],
    [0, 0, 0, 0, 1, 1, 1],
    [1, 1, 1, 1, 0, 1, 0],
    [1, 0, 0, 1, 0, 1, 0]
]
CFeatures1 = ["A", "B", "C", "D", "E", "F"]

C1 = [
    [1, 1, 1, 1, 0, 0, 0, 0, 1],
    [1, 1, 1, 0, 0, 1, 0, 0, 1],
    [1, 0, 1, 0, 0, 0, 1, 0, 1],
    [0, 0, 1, 0, 1, 0, 0, 1, 0],
    [1, 1, 0, 0, 0, 0, 1, 0, 1],
    [0, 0, 0, 1, 1, 0, 0, 0, 1],
    [1, 1, 1, 0, 1, 1, 0, 0, 1],
    [0, 1, 0, 1, 0, 1, 0, 0, 0],
    [1, 0, 0, 1, 1, 0, 0, 0, 0],
    [1, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 1, 0, 1, 0],
    [1, 0, 1, 1, 1, 0, 0, 1, 1],
    [0, 1, 0, 0, 1, 1, 1, 0, 0],
    [0, 1, 0, 0, 1, 1, 0, 1, 0],
    [0, 1, 1, 0, 0, 0, 0, 0, 0],
    [1, 0, 0, 0, 1, 1, 0, 0, 1]
]
CFeatures1 = ["A", "B", "C", "D", "E", "F", "G", "H"]

C = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],
     [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1],
     [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],
     [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
     [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1],
     [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
     [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1],
     [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
     [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],
     [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1],
     [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1],
     [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],
     [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1],
     [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1],
     [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1],
     [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0],
     [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0],
     [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1]]
CFeatures = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J"]

C1 = [
    [-88, 96, "X"],
    [-47, -27, "Z"],
    [-68, 15, "Z"],
    [-30, 87, "Y"],
    [2, -92, "X"],
    [86, -75, "Y"]
]
CFeatures1 = ["A", "B"]

C1 = [
    [-2, -56, 12, -98, "Z"],
    [70, 0, 26, 20, "Z"],
    [-80, -67, -44, 78, "Z"],
    [-24, 26, 56, -24, "Z"],
    [-99, 73, -42, 56, "X"],
    [-100, 100, 14, 94, "Y"],
    [-62, 99, 99, 30, "X"],
    [73, 84, 66, 35, "Y"],
    [32, -82, 33, 58, "Z"],
    [-99, -30, -8, -27, "Z"],
    [15, 7, 75, -21, "X"]
]
CFeatures1 = ["A", "B", "C", "D"]

C1 = [
    [-23, -90, -60, 43, 43, -17, "X"],
    [72, 85, -37, 83, -64, -86, "X"],
    [-18, 28, -74, 20, 55, -51, "Z"],
    [80, -67, -6, 97, -6, -19, "Y"],
    [-84, 93, 69, -47, -7, 94, "Y"],
    [-61, 27, 46, -43, 68, -60, "Z"],
    [89, -44, 19, 11, 10, 51, "X"],
    [94, -22, -79, -87, -26, -23, "Z"],
    [-9, 13, -75, -88, -34, 33, "Z"]
]
CFeatures1 = ["A", "B", "C", "D", "E", "F"]

C1 = [
    [38, -3, 95, -5, -67, 85, -89, 51, "Y"],
    [25, -22, -21, -39, -24, -10, 45, 82, "X"],
    [-7, 8, 67, 35, 62, -72, -13, 82, "X"],
    [67, -19, 69, -87, 50, 21, 93, -63, "Z"],
    [20, 97, 38, -12, 54, 14, -27, -24, "Y"],
    [-2, -13, -68, 90, 16, -76, 37, -14, "Z"],
    [-64, 75, 80, -72, 7, -96, 52, -29, "Y"],
    [-19, 94, -33, -3, 38, -29, 1, 66, "Y"],
    [68, 85, 67, 70, -69, -44, 48, 71, "X"],
    [64, 28, -46, 43, -31, -14, 57, -35, "X"]

]
CFeatures1 = ["A", "B", "C", "D", "E", "F", "G", "H"]

C1 = [[-63, -85, 45, -91, 12, -4, 80,"Y"],
     [-5, 15, -56, -82, -27, -78, 79, "Y"],
     [60, -47, -98, -75, -34, -88, 19, "Z"],
     [-42, 84, -72, -10, -82, -50, 73, "X"],
     [-43, 19, 98, -77, 69, 45, -91, "X"],
     [-59, 8, -75, -1, -65, 98, -81, "Z"],
     [35, -55, -66, -16, -35, -45, 0, "Y"],
     [60, -74, 33, 21, -22, -4, -87, "Z"],
     [-18, -11, -5, -79, 63, 46, -66, "Y"],
     [-12, 71, 75, 15, -17, 25, -58, "Y"],
     [-49, -87, -13, -84, 62, -81, -84, "Z"],
     [25, -91, -64, -99, 5, -70, 42, "X"]]
CFeatures1 = ["A", "B", "C", "D", "E", "F", "G"]
"""

# converts csv file to a 2d array
def read_csv_to_list(filename):
    with open(filename, newline='') as file:
        reader = csv.reader(file)
        data_list = list(reader)
    return data_list

# Usage
sample_size = 15 # size of sample
filename = 'datasets/iris.csv' # name of file
C_full = read_csv_to_list(filename) # full file to 2d array
C = random.sample(C_full, sample_size) # takes a sample

# populates the features list based on the number of column in dataset
CFeatures = []
for i in range(len(C[0])-1):
    CFeatures.append("f"+str(i))


# the following is for handling numerical features

# Initialize an OrderedDict to map each feature to an ordered set of its values
featureValuesMap = OrderedDict()

# Initialize the mapping with each feature key pointing to an empty set
for feature in CFeatures:
    featureValuesMap[feature] = set()

# Populate the sets with values from C
for row in C:
    for i, feature in enumerate(CFeatures):
        featureValuesMap[feature].add(row[i])

# Convert sets to sorted lists
for feature in featureValuesMap:
    featureValuesMap[feature] = sorted(featureValuesMap[feature])   

orderFeatures = []
for key, values in featureValuesMap.items():
    for value in values:
        orderFeatures.append([key, value])